AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This AWS CloudFormation Template deploys a S3-based CICD pipeline to deploy a docker
  image to Amazon ECR. The image needs to be upload to azuredropbucket ressource as
  zip. Docker build runs within the pipeline.
Outputs:
  BuildArtrifactsBucket:
    Description: 'Logging Bucket: Build process'
    Value: !GetAtt 'CodeBuildProjectDockerStaticWebsite.Arn'
  CodeBuildARN:
    Description: CodeBuild Arn
    Value: !GetAtt 'CodeBuildProjectDockerStaticWebsite.Arn'
  CodePipelineARN:
    Description: CodePipeline Arn
    Value: !Join
      - ''
      - - 'arn:aws:codepipeline:'
        - !Ref 'AWS::Region'
        - ':'
        - !Ref 'AWS::AccountId'
        - ':'
        - dockerdeliverystaticwebsite
  EventRule:
    Description: Cloudwatch Event Rule to trigger CodePipeline
    Value: !GetAtt 'DockerStaticWebsiteEventRule.Arn'
  IncommingBucket:
    Description: Incomming Bucket for docker.zip
    Value: !GetAtt 'dockerstaticwebsite.Arn'
  S3DeliveryTrail:
    Description: Cloudtrail to detect drift changes within S3
    Value: !GetAtt 'S3DeliveryTrail.Arn'
  ServiceRoleBuild:
    Description: CodeBuild IAM role
    Value: !GetAtt 'CodeBuildServiceRole.Arn'
  ServiceRolePipeline:
    Description: CodePipelind IAM role
    Value: !GetAtt 'CodePipelineServiceRole.Arn'
Parameters:
  AppName:
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
    Default: cicdstaticwebsite
    Description: Application Name
    MaxLength: '255'
    MinLength: '1'
    Type: String
  ArtifactBucket:
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
    Default: buildartifactsbucket
    Description: Artifact Bucket Name
    MaxLength: '255'
    MinLength: '1'
    Type: String
  DeliveryBucket:
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
    Default: dockerstaticwebsite
    Description: Retrieval Bucket Name
    MaxLength: '255'
    MinLength: '1'
    Type: String
  Key:
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
    Default: dockerdeliverystaticwebsite
    Description: CodeBuild Project Name
    MaxLength: '255'
    MinLength: '1'
    Type: String
  RepName:
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
    Default: dockerstaticwebsite
    Description: ECR Repository Name
    MaxLength: '255'
    MinLength: '1'
    Type: String
  S3ObjectKey:
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
    Default: docker.zip
    Description: Uploaded Key
    MaxLength: '255'
    MinLength: '1'
    Type: String
Resources:
  AWSCloudTrailBucket:
    Type: AWS::S3::Bucket
  BucketPolicy:
    Properties:
      Bucket: !Ref 'AWSCloudTrailBucket'
      PolicyDocument:
        Statement:
          - Action: s3:GetBucketAcl
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Resource: !GetAtt 'AWSCloudTrailBucket.Arn'
            Sid: AWSCloudTrailAclCheck
          - Action: s3:PutObject
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Resource: !Join
              - ''
              - - !GetAtt 'AWSCloudTrailBucket.Arn'
                - /AWSLogs/
                - !Ref 'AWS::AccountId'
                - /*
            Sid: AWSCloudTrailWrite
    Type: AWS::S3::BucketPolicy
  CodeBuildProjectDockerStaticWebsite:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: 'true'
        Type: LINUX_CONTAINER
      Name: cicdstaticwebsite
      ServiceRole: !GetAtt 'CodeBuildServiceRole.Arn'
      Source:
        GitCloneDepth: 1
        InsecureSsl: 'false'
        Type: CODEPIPELINE
      TimeoutInMinutes: 60
    Type: AWS::CodeBuild::Project
  CodeBuildServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !GetAtt 'dockerstaticwebsite.Arn'
                  - !GetAtt 'buildartifactsbucket.Arn'
                  - !Join
                    - /
                    - - !GetAtt 'dockerstaticwebsite.Arn'
                      - '*'
                  - !Join
                    - /
                    - - !GetAtt 'buildartifactsbucket.Arn'
                      - '*'
            Version: '2012-10-17'
          PolicyName: WorktwithS3
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                Effect: Allow
                Resource:
                  - '*'
            Version: '2012-10-17'
          PolicyName: WorkWithLogs
        - PolicyDocument:
            Statement:
              - Action:
                  - ecr:CompleteLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:GetAuthorizationToken
                  - ecr:InitiateLayerUpload
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                Effect: Allow
                Resource:
                  - '*'
            Version: '2012-10-17'
          PolicyName: WorkWithECR
    Type: AWS::IAM::Role
  CodePipelineServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - iam:PassRole
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - fargate:*
                Effect: Allow
                Resource:
                  - '*'
            Version: '2012-10-17'
          PolicyName: CopyCodePipelineServicePolicy
    Type: AWS::IAM::Role
  DockerStaticWebsiteEventRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - codepipeline:StartPipelineExecution
                Effect: Allow
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:codepipeline:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - ':'
                      - !Ref 'DockerStaticWebsitePipeline'
            Version: '2012-10-17'
          PolicyName: DockerSaticWebsitePipeline
    Type: AWS::IAM::Role
  DockerStaticWebsiteEventRule:
    Properties:
      Description: >-
        Amazon CloudWatch Events rule to automatically start your pipeline when a
        change occurs in the Amazon S3 object key or S3 folder. Deleting this may
        prevent changes from being detected in that pipeline. Read more: http://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html
      EventPattern:
        detail:
          eventName:
            - PutObject
            - CompleteMultipartUpload
            - CopyObject
          eventSource:
            - s3.amazonaws.com
          requestParameters:
            bucketName:
              - !Ref 'dockerstaticwebsite'
            key:
              - docker.zip
        detail-type:
          - AWS API Call via CloudTrail
        source:
          - aws.s3
      Name: codepipeline-DockerStaticWebsiteEventRule
      State: ENABLED
      Targets:
        - Arn: !Join
            - ''
            - - 'arn:aws:codepipeline:'
              - !Ref 'AWS::Region'
              - ':'
              - !Ref 'AWS::AccountId'
              - ':'
              - dockerdeliverystaticwebsite
          Id: CodePipelineTarget
          RoleArn: !GetAtt 'DockerStaticWebsiteEventRole.Arn'
    Type: AWS::Events::Rule
  DockerStaticWebsitePipeline:
    Properties:
      ArtifactStore:
        Location: !Ref 'buildartifactsbucket'
        Type: S3
      Name: dockerdeliverystaticwebsite
      RoleArn: !GetAtt 'CodePipelineServiceRole.Arn'
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                PollForSourceChanges: 'false'
                S3Bucket: !Ref 'dockerstaticwebsite'
                S3ObjectKey: docker.zip
              Name: Source
              OutputArtifacts:
                - Name: SourceArtifact
              Region: !Ref 'AWS::Region'
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: cicdstaticwebsite
              InputArtifacts:
                - Name: SourceArtifact
              Name: Build
              OutputArtifacts:
                - Name: BuildArtifact
              Region: !Ref 'AWS::Region'
          Name: Build
    Type: AWS::CodePipeline::Pipeline
  DockerStaticWebsiteRepo:
    Properties:
      RepositoryName: !Ref 'RepName'
      RepositoryPolicyText:
        Statement:
          - Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Effect: Allow
            Principal:
              AWS: '*'
            Sid: AllowPushPull
        Version: '2012-10-17'
    Type: AWS::ECR::Repository
  S3DeliveryTrail:
    DependsOn:
      - BucketPolicy
    Properties:
      EventSelectors:
        - DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref 'dockerstaticwebsite'
                    - /
                    - docker.zip
          IncludeManagementEvents: 'true'
          ReadWriteType: All
      IsLogging: 'true'
      S3BucketName: !Ref 'AWSCloudTrailBucket'
    Type: AWS::CloudTrail::Trail
  buildartifactsbucket:
    Type: AWS::S3::Bucket
  dockerstaticwebsite:
    Properties:
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket

