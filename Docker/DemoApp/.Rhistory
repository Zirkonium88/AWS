data$mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(data)
}
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select = WBQ,
mutate_fun = apply.monthly,
FUN        = mean_vacation)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(WBQ){
sum_wbq = sum(time_Consultant$WBQ)
sum_relevantdays = sum(time_Consultant$RelevantDay)
vac_days = sum(ifelse(time_Consultant$Worktype=="Vacation",1,0))
data$mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(data)
}
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select = WBQ,
mutate_fun = apply.monthly,
FUN        = mean_vacation)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(WBQ){
sum_wbq = sum(WBQ)
sum_relevantdays = sum(time_Consultant$RelevantDay)
vac_days = sum(ifelse(time_Consultant$Worktype=="Vacation",1,0))
data$mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(data)
}
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select = WBQ,
mutate_fun = apply.monthly,
FUN        = mean_vacation)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(WBQ){
sum_wbq = sum(time_Consultant$WBQ)
sum_relevantdays = sum(time_Consultant$RelevantDay)
vac_days = sum(ifelse(time_Consultant$Worktype=="Vacation",1,0))
data$mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(data)
}
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select = WBQ,
mutate_fun = apply.monthly,
FUN        = mean_vacation)
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select     = WBQ,
mutate_fun = apply.monthly,
FUN        = mean_vacation)
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select     = WBQ,
mutate_fun = apply.monthly,
FUN        = stat_fun())
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select     = WBQ,
mutate_fun = apply.monthly,
FUN        = stat_fun)
# Aggregation functions, round results to 1 digits
stat_fun <- function(x) c(min = round_up(min(x),2),
max = round_up(max(x),2),
mean = round_up(mean(x),2),
sd = round_up(sd(x),2),
mn_vac(x))
# Aggregation functions, round results to 1 digits
stat_fun <- function(x) c(min = round_up(min(x),2),
max = round_up(max(x),2),
mean = round_up(mean(x),2),
sd = round_up(sd(x),2),
mn_vac(x))
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select     = WBQ,
mutate_fun = apply.monthly,
FUN        = stat_fun)
# Aggregation functions, round results to 1 digits
stat_fun <- function(x) c(min = round_up(min(x),2),
max = round_up(max(x),2),
mean = round_up(mean(x),2),
sd = round_up(sd(x),2),
mean_vacation(x))
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select     = WBQ,
mutate_fun = apply.monthly,
FUN        = stat_fun)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x){
sum_wbq = sum(x)
sum_relevantdays = sum(time_Consultant$RelevantDay)
vac_days = sum(ifelse(time_Consultant$Worktype=="Vacation",1,0))
data$mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(data)
}
# Aggregation functions, round results to 1 digits
stat_fun <- function(x) c(min = round_up(min(x),2),
max = round_up(max(x),2),
mean = round_up(mean(x),2),
sd = round_up(sd(x),2),
mean_vac = mean_vacation(x))
df_wbq_b <- time_Consultant %>%
filter(Date=="März") %>%
filter(RelevantDay==1) %>%
group_by(Consultant,City) %>%
tq_transmute(select     = WBQ,
mutate_fun = apply.monthly,
FUN        = stat_fun)
runApp('Documents/WBQ-Analyse/WBQ-Analyse/WBQ')
base::mean()
base::mean
mean
mean()
rowMeans
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x){
sum_wbq = sum(x)
sum_relevantdays = sum(time_Consultant$RelevantDay)
vac_days = sum(ifelse(time_Consultant$Worktype=="Vacation",1,0))
data$mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(data)
}
wbq <- c(0.5,0,0,0.6,0.7,1)
relevantdays <- c(1,0,0,1,1,1)
worktype <- c("Consutling","Weekend","Weekend","Consutling","Consutling","Vacation")
demo_Df <- data.frame(wbq,relevantdays,worktype)
sum_wbq <- sum(demo_Df$wbq)
sum_relevantdays = sum(demo_Df$relevantdays)
vac_days <- sum(ifelse(demo_Df$worktype=="Vacation",1,0))
sum_wbq
sum_relevantdays
vac_days
sum_wbq/(sum_relevantdays-vac_days)
mean_vacation(demo_Df$wbq,demo_Df$relevantdays,demo_Df$worktype)
mean_vacation(demo_Df$wbq)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x,y,z){
sum_wbq = sum(x)
sum_relevantdays = sum(y)
vac_days = sum(ifelse(z=="Vacation",1,0))
data$mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(data)
}
mean_vacation(demo_Df$wbq,demo_Df$relevantdays,demo_Df$worktype)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x,y,z){
sum_wbq = sum(x)
sum_relevantdays = sum(y)
vac_days = sum(ifelse(z=="Vacation",1,0))
mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(mn_vac)
}
mean_vacation(demo_Df$wbq,demo_Df$relevantdays,demo_Df$worktype)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x){
sum_wbq = sum(demo_Df$x)
sum_relevantdays = sum(demo_Df$y)
vac_days = sum(ifelse(demo_Df$z=="Vacation",1,0))
mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(mn_vac)
}
mean_vacation(wbq,relevantdays,worktype)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x,y,z){
sum_wbq = sum(demo_Df$x)
sum_relevantdays = sum(demo_Df$y)
vac_days = sum(ifelse(demo_Df$z=="Vacation",1,0))
mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(mn_vac)
}
mean_vacation(wbq,relevantdays,worktype)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x){
sum_wbq = sum(x)
sum_relevantdays = sum(y)
vac_days = sum(ifelse(z=="Vacation",1,0))
mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(mn_vac)
}
mean_vacation(demo_Df$wbq,demo_Df$relevantdays,demo_Df$worktype)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x,y,z){
sum_wbq = sum(x)
sum_relevantdays = sum(y)
vac_days = sum(ifelse(z=="Vacation",1,0))
mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(mn_vac)
}
mean_vacation(demo_Df$wbq,demo_Df$relevantdays,demo_Df$worktype)
# Notwendig für die Buisnessrule, dass Urlaube mit 1 gewertet, jedoch aus der Summe der Tage abgezogen werden
mean_vacation <- function(x,y,z){
sum_wbq = sum(demo_Df$x)
sum_relevantdays = sum(demo_Df$y)
vac_days = sum(ifelse(demo_Df$z=="Vacation",1,0))
mn_vac  <- round_up(sum_wbq/(sum_relevantdays-vac_days),2)
return(mn_vac)
}
mean_vacation(wbq,relevantdays,worktype)
mean_vacation("wbq","relevantdays","worktype")
time_Consultant <- data_wbq %>%
mutate(Date = case_when(
str_detect(Date,"-01-") ~ "Januar",
str_detect(Date,"-02-") ~ "Februar",
str_detect(Date,"-03-") ~ "März",
str_detect(Date,"-04-") ~ "April",
str_detect(Date,"-05-") ~ "Mai",
str_detect(Date,"-06-") ~ "Juni",
str_detect(Date,"-07-") ~ "Juli",
str_detect(Date,"-08-") ~ "August",
str_detect(Date,"-09-") ~ "September",
str_detect(Date,"-10-") ~ "Oktober",
str_detect(Date,"-11-") ~ "November",
str_detect(Date,"-12-") ~ "Dezember")) %>%
mutate(Worktype, RelevantDay = ifelse((Worktype=="Weekend" && Hours>0) | Worktype !="Weekend",1,0)) %>%
mutate(Worktype, VacationDay = ifelse(Worktype=="Vacation",1,0)) %>%
mutate(WBQ = Hours/8)
runApp('Documents/WBQ-Analyse/WBQ-Analyse/WBQ')
library(ggplot2)
names <- c(
"Buildings trainings sets",
"Cleaning and organizing data",
"Collecting data sets",
"Mining data for patterns",
"Refining algortihms",
"Other"
)
percentage <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,percentage)
df
bp<- ggplot(df, aes(x="", y=value, fill=group)) +
coord_polar("y", start=0)
ggplot(df, aes(x="", y=value, fill=group)) +
coord_polar("y", start=0)
ggplot(df, aes(x="", y=percentage, fill=group)) +
coord_polar("percentage", start=0)
ggplot(df, aes(x=names, y=percentage, fill=group)) +
coord_polar("percentage", start=0)
ggplot(df, aes(x="", y=percentage, fill=group)) +
coord_polar("percentage", start=0)
bp<- ggplot(df, aes(x="", y=percentage, fill=names))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0)
pie
pie <- bp + coord_polar("y", start=0) +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
pie
names <- c(
"Buildings trainings sets",
"Cleaning and organizing data",
"Collecting data sets",
"Mining data for patterns",
"Refining algortihms",
"Other"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
pie
library(scales)
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets",
"Cleaning and organizing data",
"Collecting data sets",
"Mining data for patterns",
"Refining algortihms",
"Other"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
pie
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets",
"Cleaning and organizing data",
"Collecting data sets",
"Mining data for patterns",
"Refining algortihms",
"Other"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=2)
pie
df
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets: 3%",
"Cleaning and organizing data: 60%",
"Collecting data sets: 19%",
"Mining data for patterns: 9%",
"Refining algortihms: 4%",
"Other: 5%"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie
pie <- bp + coord_polar("y", start=0) +
scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
pie
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets: 3%",
"Cleaning and organizing data: 60%",
"Collecting data sets: 19%",
"Mining data for patterns: 9%",
"Refining algortihms: 4%",
"Other: 5%"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
pie
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets: 3%",
"Cleaning and organizing data: 60%",
"Collecting data sets: 19%",
"Mining data for patterns: 9%",
"Refining algortihms: 4%",
"Other: 5%"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
scale_fill_grey() +
theme(axis.text.x=element_blank()) +
pie
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets: 3%",
"Cleaning and organizing data: 60%",
"Collecting data sets: 19%",
"Mining data for patterns: 9%",
"Refining algortihms: 4%",
"Other: 5%"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets: 3%",
"Cleaning and organizing data: 60%",
"Collecting data sets: 19%",
"Mining data for patterns: 9%",
"Refining algortihms: 4%",
"Other: 5%"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets: 3%",
"Cleaning and organizing data: 60%",
"Collecting data sets: 19%",
"Mining data for patterns: 9%",
"Refining algortihms: 4%",
"Other: 5%"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
scale_fill_brewer("Blues") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie
library(ggplot2)
library(scales)
names <- c(
"Buildings trainings sets: 3%",
"Cleaning and organizing data: 60%",
"Collecting data sets: 19%",
"Mining data for patterns: 9%",
"Refining algortihms: 4%",
"Other: 5%"
)
value <- c(
3,60,19,9,4,5
)
df <-  data.frame(names,value)
bp<- ggplot(df, aes(x="", y=value, fill=names))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0) +
labs(fill = "What Data Scietists spend the most time doing?") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie
shiny::runApp('Library/Mobile Documents/com~apple~CloudDocs/Documents/Demos/Docker/DemoApp')
