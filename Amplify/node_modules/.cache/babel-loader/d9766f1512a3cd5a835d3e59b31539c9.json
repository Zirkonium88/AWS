{"ast":null,"code":"var _jsxFileName = \"/Users/mwalkowiak/Library/Mobile Documents/com~apple~CloudDocs/Documents/Montessori/hoursnotes/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport aws_exports from './aws-exports'; // specify the location of aws-exports.js file on your project\n\nAmplify.configure(aws_exports);\nconst CreateNote = `\n  mutation($name: String!, $description: String, $hours: String) {\n    createItem(input: {\n      name: $name\n      description: $description\n      hours: $hours\n    }) {\n      id \n      name\n      description\n      hours\n    }\n  }\n`;\nconst ReadNote = `query listNotes{\n  listNotes{\n    items{\n      id\n      name\n      description\n      hours\n    }\n  }\n}`;\n\nclass App extends Component {\n  //create initial state\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createItem = async () => {\n      if (this.state.name === '' || this.state.description === '' || this.state.hours === '') return;\n\n      try {\n        const note = {\n          name: this.state.name,\n          description: this.state.description,\n          hours: this.state.hours\n        };\n        await API.graphql(graphqlOperation(CreateNote, note));\n        this.setState({\n          name: '',\n          description: '',\n          hours: ''\n        });\n        console.log('note successfully created!');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      hours: \"\",\n      notes: [],\n      displayAdd: true,\n      displayUpdate: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const notes = await API.graphql(graphqlOperation(ReadNote));\n      console.log('notes: ', notes);\n      this.setState({\n        notes: notes.data.listNotesitems\n      });\n    } catch (err) {\n      console.log('error fetching data: ', err);\n    }\n  } //update state when user types into inputs\n\n\n  //render the component\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Trag' deine Elternstunden in das Formular ein.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      placeholder: \"Familienname\",\n      className: \"form-control\",\n      value: this.state.name,\n      onChange: this.onChange,\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"description\",\n      type: \"text\",\n      placeholder: \"Beschreibung der Elternarbeit\",\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: this.onChange,\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"hours\",\n      type: \"text\",\n      placeholder: \"Anzahl Elternstunden\",\n      className: \"form-control\",\n      value: this.state.hours,\n      onChange: this.onChange,\n      name: \"hours\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.createItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Eintrag vornehmen\"), this.state.notes.map((r, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, r.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, r.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, r.hours)))));\n  }\n\n}\n\nexport default withAuthenticator(App, {\n  includeGreetings: true\n});","map":{"version":3,"sources":["/Users/mwalkowiak/Library/Mobile Documents/com~apple~CloudDocs/Documents/Montessori/hoursnotes/src/App.js"],"names":["React","Component","Amplify","API","graphqlOperation","withAuthenticator","aws_exports","configure","CreateNote","ReadNote","App","constructor","props","onChange","e","setState","target","name","value","createItem","state","description","hours","note","graphql","console","log","err","notes","displayAdd","displayUpdate","componentDidMount","data","listNotesitems","render","map","r","i","includeGreetings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Amplify, {API,graphqlOperation} from 'aws-amplify';\nimport { withAuthenticator} from 'aws-amplify-react'; \nimport aws_exports from './aws-exports'; // specify the location of aws-exports.js file on your project\nAmplify.configure(aws_exports);\n\nconst CreateNote = `\n  mutation($name: String!, $description: String, $hours: String) {\n    createItem(input: {\n      name: $name\n      description: $description\n      hours: $hours\n    }) {\n      id \n      name\n      description\n      hours\n    }\n  }\n`\n\nconst ReadNote = `query listNotes{\n  listNotes{\n    items{\n      id\n      name\n      description\n      hours\n    }\n  }\n}`;\n\nclass App extends Component {\n  //create initial state\n  constructor(props){\n    super(props);\n    this.state={\n      name:\"\",\n      description:\"\",\n      hours:\"\",\n      notes: [],\n      displayAdd:true,\n      displayUpdate:false\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const notes = await API.graphql(graphqlOperation(ReadNote))\n      console.log('notes: ', notes)\n      this.setState({ notes: notes.data.listNotesitems })\n    } catch (err) {\n      console.log('error fetching data: ', err)\n    }\n  }\n  \n  //update state when user types into inputs\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  \n  //define function to execute mutation\n  createItem = async() => {\n    if (\n      this.state.name === '' || \n      this.state.description === '' || \n      this.state.hours === '') \n      return\n    try {\n      const note = { \n        name: this.state.name, \n        description: this.state.description ,\n        hours: this.state.hours \n      }\n      await API.graphql(graphqlOperation(CreateNote, note))\n      this.setState({ name: '', description: '', hours: '' })\n      console.log('note successfully created!')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n//render the component\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <legend>Trag' deine Elternstunden in das Formular ein.</legend>\n            <p>\n              <input id=\"name\" type=\"text\" placeholder=\"Familienname\" className=\"form-control\" value={this.state.name} onChange={this.onChange} name='name' />\n            </p>\n            <p>\n            <input id=\"description\" type=\"text\" placeholder=\"Beschreibung der Elternarbeit\" className=\"form-control\" value={this.state.description} onChange={this.onChange} name='description' />\n            </p>\n            <p>\n              <input id=\"hours\" type=\"text\" placeholder=\"Anzahl Elternstunden\" className=\"form-control\" value={this.state.hours} onChange={this.onChange} name='hours' />\n            </p>\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.createItem}>Eintrag vornehmen</button>\n            {\n              this.state.notes.map((r, i) => (\n                <div key={i}>\n                  <p>{r.name}</p>\n                  <p>{r.description}</p>\n                  <p>{r.hours}</p>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n\n    )\n  }\n}\nexport default withAuthenticator(App, { includeGreetings: true });"]},"metadata":{},"sourceType":"module"}