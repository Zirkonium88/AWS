AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  S3BucketSecureURL:
    Description: Name of S3 bucket to hold website content
    Value: !Join
      - ''
      - - http://
        - !GetAtt 'awstrainingsbytecracer.DomainName'
  WebsiteURL:
    Description: URL for website hosted on S3
    Value: !GetAtt 'awstrainingsbytecracer.WebsiteURL'
Resources:
  BucketPolicyStaticWebsite:
    Properties:
      Bucket: !Ref 'awstrainingsbytecracer'
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Principal: '*'
            Resource:
              - !Join
                - ''
                - - !GetAtt 'awstrainingsbytecracer.Arn'
                  - /*
            Sid: ReadOnly
        Version: '2012-10-17'
    Type: AWS::S3::BucketPolicy
  CodeBuildServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !GetAtt 'buildartifactsbucket.Arn'
                  - !Join
                    - /
                    - - !GetAtt 'buildartifactsbucket.Arn'
                      - '*'
                  - !GetAtt 'awstrainingsbytecracer.Arn'
                  - !Join
                    - /
                    - - !GetAtt 'awstrainingsbytecracer.Arn'
                      - '*'
            Version: '2012-10-17'
          PolicyName: WorktwithS3
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                Effect: Allow
                Resource:
                  - '*'
            Version: '2012-10-17'
          PolicyName: WorkWithLogs
        - PolicyDocument:
            Statement:
              - Action:
                  - cloudfront:CreateInvalidation
                Effect: Allow
                Resource:
                  - '*'
            Version: '2012-10-17'
          PolicyName: WorkWithCloudfront
    Type: AWS::IAM::Role
  CodePipelineServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - iam:PassRole
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:GetCommit
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetObjectVersion
                  - codecommit:UploadArchive
                Effect: Allow
                Resource:
                  - '*'
            Version: '2012-10-17'
          PolicyName: CopyCodePipelineServicePolicy
    Type: AWS::IAM::Role
  StaticWebsiteEventRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - codepipeline:StartPipelineExecution
                Effect: Allow
                Resource:
                  - !Join
                    - ''
                    - - 'arn:aws:codepipeline:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - ':'
                      - !Ref 'TrainingsHomepageCICD'
            Version: '2012-10-17'
          PolicyName: cwe-pipeline-execution
    Type: AWS::IAM::Role
  StaticWebsiteEventRule:
    Properties:
      Description: Amazon CloudWatch Events rule to automatically start your pipeline
        when a change occurs in CodeCommit
      EventPattern:
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
          referenceType:
            - branch
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt 'TrainingsHomepage.Arn'
        source:
          - aws.codecommit
      Name: codepipeline-StaticWebsiteEventRule
      State: ENABLED
      Targets:
        - Arn: !Join
            - ''
            - - 'arn:aws:codepipeline:'
              - !Ref 'AWS::Region'
              - ':'
              - !Ref 'AWS::AccountId'
              - ':'
              - TrainingsHomepageBuild
          Id: CodePipelineTarget
          RoleArn: !GetAtt 'StaticWebsiteEventRole.Arn'
    Type: AWS::Events::Rule
  TrainingsHomepage:
    Properties:
      RepositoryName: TrainingsHomepage
    Type: AWS::CodeCommit::Repository
  TrainingsHomepageBuild:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/ubuntu-base:14.04
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: 'true'
        Type: LINUX_CONTAINER
      Name: TrainingsHomepageProject
      ServiceRole: !GetAtt 'CodeBuildServiceRole.Arn'
      Source:
        GitCloneDepth: 1
        InsecureSsl: 'false'
        Type: CODEPIPELINE
      TimeoutInMinutes: 60
    Type: AWS::CodeBuild::Project
  TrainingsHomepageCICD:
    Properties:
      ArtifactStore:
        Location: !Ref 'buildartifactsbucket'
        Type: S3
      Name: TrainingsHomepageBuild
      RoleArn: !GetAtt 'CodePipelineServiceRole.Arn'
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: master
                PollForSourceChanges: 'false'
                RepositoryName: TrainingsHomepage
              Name: Source
              OutputArtifacts:
                - Name: SourceArtifact
              Region: !Ref 'AWS::Region'
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: TrainingsHomepageProject
              InputArtifacts:
                - Name: SourceArtifact
              Name: Build
              OutputArtifacts:
                - Name: BuildArtifact
              Region: !Ref 'AWS::Region'
          Name: Build
    Type: AWS::CodePipeline::Pipeline
  awstrainingsbytecracer:
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        ErrorDocument: 404.html
        IndexDocument: index.html
    Type: AWS::S3::Bucket
  buildartifactsbucket:
    Type: AWS::S3::Bucket

