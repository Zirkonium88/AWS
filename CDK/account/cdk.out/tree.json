{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "accountSetUp": {
        "id": "accountSetUp",
        "path": "accountSetUp",
        "children": {
          "Allow_Users_To_Change_Password": {
            "id": "Allow_Users_To_Change_Password",
            "path": "accountSetUp/Allow_Users_To_Change_Password"
          },
          "Hard_Expiry": {
            "id": "Hard_Expiry",
            "path": "accountSetUp/Hard_Expiry"
          },
          "Max_Password_Age": {
            "id": "Max_Password_Age",
            "path": "accountSetUp/Max_Password_Age"
          },
          "Minimum_Password_Length": {
            "id": "Minimum_Password_Length",
            "path": "accountSetUp/Minimum_Password_Length"
          },
          "Password_Reuse_Prevention": {
            "id": "Password_Reuse_Prevention",
            "path": "accountSetUp/Password_Reuse_Prevention"
          },
          "Require_Lowercase_Characters": {
            "id": "Require_Lowercase_Characters",
            "path": "accountSetUp/Require_Lowercase_Characters"
          },
          "Require_Numbers_Characters": {
            "id": "Require_Numbers_Characters",
            "path": "accountSetUp/Require_Numbers_Characters"
          },
          "Require_Symbols_Characters": {
            "id": "Require_Symbols_Characters",
            "path": "accountSetUp/Require_Symbols_Characters"
          },
          "Require_Uppercase_Characters": {
            "id": "Require_Uppercase_Characters",
            "path": "accountSetUp/Require_Uppercase_Characters"
          },
          "Set_Password_Policy": {
            "id": "Set_Password_Policy",
            "path": "accountSetUp/Set_Password_Policy",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "accountSetUp/Set_Password_Policy/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Set_Password_Policy/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "accountSetUp/Set_Password_Policy/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "accountSetUp/Set_Password_Policy/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "iam:GetAccountPasswordPolicy",
                                    "iam:UpdateAccountPasswordPolicy",
                                    "iam:DeleteAccountPasswordPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SetPasswordPolicyServiceRoleDefaultPolicy6A127D21",
                            "roles": [
                              {
                                "Ref": "SetPasswordPolicyServiceRole07D7CF76"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Set_Password_Policy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "'use strict';\nconst AWS = require('aws-sdk');\nconst response = require('./cfn-response');\nconst iam = new AWS.IAM({apiVersion: '2010-05-08'});\nexports.handler = (event, context, cb) => {\n    console.log(`Invoke: ${JSON.stringify(event)}`);\n    function done(err) {\n        if (err) {\n        console.log(`Error: ${JSON.stringify(err)}`);\n        response.send(event, context, response.FAILED, {});\n        } else {\n        response.send(event, context, response.SUCCESS, {});\n        }\n    }\n    if (event.RequestType === 'Delete') {\n        iam.deleteAccountPasswordPolicy({}, done);\n    } else if (event.RequestType === 'Create' || event.RequestType === 'Update') {\n        const params = {\n        MinimumPasswordLength: parseInt(event.ResourceProperties.MinimumPasswordLength, 10),\n        RequireSymbols: event.ResourceProperties.RequireSymbols === 'true',\n        RequireNumbers: event.ResourceProperties.RequireNumbers === 'true',\n        RequireUppercaseCharacters: event.ResourceProperties.RequireUppercaseCharacters === 'true',\n        RequireLowercaseCharacters: event.ResourceProperties.RequireLowercaseCharacters === 'true',\n        AllowUsersToChangePassword: event.ResourceProperties.AllowUsersToChangePassword === 'true',\n        HardExpiry: event.ResourceProperties.HardExpiry === 'true'\n        };\n        if (parseInt(event.ResourceProperties.MaxPasswordAge, 10) > 0) {\n        params.MaxPasswordAge = parseInt(event.ResourceProperties.MaxPasswordAge, 10);\n        }\n        if (parseInt(event.ResourceProperties.PasswordReusePrevention, 10) > 0) {\n        params.PasswordReusePrevention = parseInt(event.ResourceProperties.PasswordReusePrevention, 10);\n        }\n        iam.updateAccountPasswordPolicy(params, done);\n    } else {\n        cb(new Error(`unsupported RequestType: ${event.RequestType}`));\n    }\n};"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "SetPasswordPolicyServiceRole07D7CF76",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs10.x",
                    "functionName": "Lambda_Set_Password_Policy",
                    "memorySize": 128,
                    "timeout": 30
                  }
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "accountSetUp/Set_Password_Policy/LogRetention",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "accountSetUp/Set_Password_Policy/LogRetention/Provider"
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Set_Password_Policy/LogRetention/Resource"
                  }
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "accountSetUp/Set_Password_Policy/LogGroup"
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "accountSetUp/Set_Password_Policy/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Set_Password_Policy/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SetPasswordPolicy62BCABC3"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3Bucket4E933C7F"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs10.x"
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "accountSetUp/AssetParameters",
            "children": {
              "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a": {
                "id": "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a",
                "path": "accountSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "accountSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "accountSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "accountSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/ArtifactHash"
                  }
                }
              },
              "6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7": {
                "id": "6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7",
                "path": "accountSetUp/AssetParameters/6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "accountSetUp/AssetParameters/6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "accountSetUp/AssetParameters/6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "accountSetUp/AssetParameters/6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7/ArtifactHash"
                  }
                }
              }
            }
          },
          "Update_Password_Policy": {
            "id": "Update_Password_Policy",
            "path": "accountSetUp/Update_Password_Policy",
            "children": {
              "Default": {
                "id": "Default",
                "path": "accountSetUp/Update_Password_Policy/Default"
              }
            }
          },
          "user_email": {
            "id": "user_email",
            "path": "accountSetUp/user_email"
          },
          "SandBox_Admin_User_Group": {
            "id": "SandBox_Admin_User_Group",
            "path": "accountSetUp/SandBox_Admin_User_Group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/SandBox_Admin_User_Group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Group",
                  "aws:cdk:cloudformation:props": {
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AdministratorAccess"
                          ]
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "Limit_Sandbox_Admin_Group": {
            "id": "Limit_Sandbox_Admin_Group",
            "path": "accountSetUp/Limit_Sandbox_Admin_Group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Limit_Sandbox_Admin_Group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "ec2:*Reserved*",
                            "dynamodb:*Reserved*",
                            "rds:*Reserved*",
                            "elasticache:*Reserved*",
                            "redshift:*Reserved*",
                            "elasticsearch:*Reserved*",
                            "cloudfront:*Reserved*",
                            "emr:*Reserved*"
                          ],
                          "Effect": "Deny",
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "LimitSandboxAdminGroup70A710EA",
                    "groups": [
                      {
                        "Ref": "SandBoxAdminUserGroupF0F4A0DA"
                      }
                    ]
                  }
                }
              }
            }
          },
          "Billing_Topic": {
            "id": "Billing_Topic",
            "path": "accountSetUp/Billing_Topic",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Billing_Topic/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                  "aws:cdk:cloudformation:props": {
                    "displayName": "BillingAllertTopic",
                    "topicName": "BillingAllertTopic"
                  }
                }
              }
            }
          },
          "Billing_Topic_Subscription": {
            "id": "Billing_Topic_Subscription",
            "path": "accountSetUp/Billing_Topic_Subscription",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
              "aws:cdk:cloudformation:props": {
                "protocol": "email",
                "topicArn": {
                  "Ref": "BillingTopicBD902DD9"
                },
                "endpoint": {
                  "Ref": "useremail"
                }
              }
            }
          },
          "Billing_Alert5_Dollars": {
            "id": "Billing_Alert5_Dollars",
            "path": "accountSetUp/Billing_Alert5_Dollars",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Billing_Alert5_Dollars/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                  "aws:cdk:cloudformation:props": {
                    "comparisonOperator": "GreaterThanThreshold",
                    "evaluationPeriods": 1,
                    "alarmActions": [
                      {
                        "Ref": "BillingTopicBD902DD9"
                      }
                    ],
                    "alarmDescription": "If costs are greater then 5$ within 6 hours, this alarm will be triggered.",
                    "dimensions": [
                      {
                        "name": "Currency",
                        "value": "USD"
                      }
                    ],
                    "metricName": "Estimated_Charges",
                    "namespace": "AWS/Billing",
                    "period": 21600,
                    "statistic": "Maximum",
                    "threshold": 5
                  }
                }
              }
            }
          },
          "Check_User_Topic": {
            "id": "Check_User_Topic",
            "path": "accountSetUp/Check_User_Topic",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Check_User_Topic/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                  "aws:cdk:cloudformation:props": {
                    "displayName": "UserAccessKeyTopic",
                    "topicName": "UserAccessKeyTopic"
                  }
                }
              }
            }
          },
          "User_Topic_Subscription": {
            "id": "User_Topic_Subscription",
            "path": "accountSetUp/User_Topic_Subscription",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
              "aws:cdk:cloudformation:props": {
                "protocol": "email",
                "topicArn": {
                  "Ref": "CheckUserTopicF3F01C93"
                },
                "endpoint": {
                  "Ref": "useremail"
                }
              }
            }
          },
          "Check_User_Keys": {
            "id": "Check_User_Keys",
            "path": "accountSetUp/Check_User_Keys",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "accountSetUp/Check_User_Keys/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Check_User_Keys/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "accountSetUp/Check_User_Keys/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "accountSetUp/Check_User_Keys/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "iam:ListUsers",
                                    "iam:ListAccessKeys"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "sns:Publish",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Ref": "CheckUserTopicF3F01C93"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CheckUserKeysServiceRoleDefaultPolicy6FF65E59",
                            "roles": [
                              {
                                "Ref": "CheckUserKeysServiceRole1581AA85"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "accountSetUp/Check_User_Keys/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "accountSetUp/Check_User_Keys/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "accountSetUp/Check_User_Keys/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Check_User_Keys/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7S3BucketC2E03481"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7S3VersionKey71106FD8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters6383df60cc1b99de7b175befae3f0ea1dfa7ef89a2afae556140dcf51c8d17b7S3VersionKey71106FD8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "handler.DailyUserCheck",
                    "role": {
                      "Fn::GetAtt": [
                        "CheckUserKeysServiceRole1581AA85",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.7",
                    "environment": {
                      "variables": {
                        "SecOpsTopicArn": {
                          "Ref": "CheckUserTopicF3F01C93"
                        },
                        "KeyAge": "90"
                      }
                    },
                    "functionName": "Lambda_User_Keys",
                    "memorySize": 128,
                    "timeout": 30
                  }
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "accountSetUp/Check_User_Keys/LogRetention",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "accountSetUp/Check_User_Keys/LogRetention/Provider"
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Check_User_Keys/LogRetention/Resource"
                  }
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "accountSetUp/Check_User_Keys/LogGroup"
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "accountSetUp/Check_User_Keys/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Check_User_Keys/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "CheckUserKeysFBEF0A44"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 1
                      }
                    }
                  }
                }
              },
              "AllowEventRuleaccountSetUpScheduleCheckKeyLambda999591B3": {
                "id": "AllowEventRuleaccountSetUpScheduleCheckKeyLambda999591B3",
                "path": "accountSetUp/Check_User_Keys/AllowEventRuleaccountSetUpScheduleCheckKeyLambda999591B3",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "CheckUserKeysFBEF0A44",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "ScheduleCheckKeyLambdaD8310F73",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "Schedule_Check_Key_Lambda": {
            "id": "Schedule_Check_Key_Lambda",
            "path": "accountSetUp/Schedule_Check_Key_Lambda",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Schedule_Check_Key_Lambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "scheduleExpression": "cron(0 18 ? * * *)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "CheckUserKeysFBEF0A44",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "Root_User_Topic": {
            "id": "Root_User_Topic",
            "path": "accountSetUp/Root_User_Topic",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Root_User_Topic/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                  "aws:cdk:cloudformation:props": {
                    "displayName": "RootUserAccessTopic",
                    "topicName": "RootUserAccessTopic"
                  }
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "accountSetUp/Root_User_Topic/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Root_User_Topic/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SNS::TopicPolicy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "sns:Publish",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              },
                              "Resource": {
                                "Ref": "RootUserTopic37E445AC"
                              },
                              "Sid": "0"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "topics": [
                          {
                            "Ref": "RootUserTopic37E445AC"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "Cloudtrail_Bucket": {
            "id": "Cloudtrail_Bucket",
            "path": "accountSetUp/Cloudtrail_Bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Cloudtrail_Bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "431892011317-logs",
                    "lifecycleConfiguration": {
                      "rules": [
                        {
                          "expirationInDays": 1,
                          "status": "Enabled"
                        }
                      ]
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "accountSetUp/Cloudtrail_Bucket/Notifications"
              },
              "Policy": {
                "id": "Policy",
                "path": "accountSetUp/Cloudtrail_Bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "accountSetUp/Cloudtrail_Bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "CloudtrailBucket9DD872B1"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetBucketAcl",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::GetAtt": [
                                  "CloudtrailBucket9DD872B1",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": "s3:PutObject",
                              "Condition": {
                                "StringEquals": {
                                  "s3:x-amz-acl": "bucket-owner-full-control"
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "CloudtrailBucket9DD872B1",
                                        "Arn"
                                      ]
                                    },
                                    "/AWSLogs/431892011317/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Basic_Trail": {
            "id": "Basic_Trail",
            "path": "accountSetUp/Basic_Trail",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Basic_Trail/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudTrail::Trail",
                  "aws:cdk:cloudformation:props": {
                    "isLogging": true,
                    "s3BucketName": {
                      "Ref": "CloudtrailBucket9DD872B1"
                    },
                    "enableLogFileValidation": true,
                    "eventSelectors": [],
                    "includeGlobalServiceEvents": true,
                    "isMultiRegionTrail": true
                  }
                }
              }
            }
          },
          "Root_User_Topic_Subscription": {
            "id": "Root_User_Topic_Subscription",
            "path": "accountSetUp/Root_User_Topic_Subscription",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
              "aws:cdk:cloudformation:props": {
                "protocol": "email",
                "topicArn": {
                  "Ref": "RootUserTopic37E445AC"
                },
                "endpoint": {
                  "Ref": "useremail"
                }
              }
            }
          },
          "Root_Account_Usage": {
            "id": "Root_Account_Usage",
            "path": "accountSetUp/Root_Account_Usage",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "accountSetUp/Root_Account_Usage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "description": "Events rule for monitoring root AWS Console Sign In activity",
                    "eventPattern": {
                      "detail": {
                        "userIdentity": {
                          "type": [
                            "Root"
                          ]
                        }
                      },
                      "detail-type": [
                        "AWS Console Sign In via CloudTrail"
                      ]
                    },
                    "name": "Root_Activity_Rule",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Ref": "RootUserTopic37E445AC"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "vpcSetUp": {
        "id": "vpcSetUp",
        "path": "vpcSetUp",
        "children": {
          "Basic_Vpc": {
            "id": "Basic_Vpc",
            "path": "vpcSetUp/Basic_Vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "vpcSetUp/Basic_Vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "192.168.0.0/20",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "vpcSetUp/Basic_Vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "vpcSetUp/Basic_Vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "192.168.0.0/22",
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "availabilityZone": "eu-central-1a",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PublicSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "BasicVpcPublicSubnet1RouteTable7B328207"
                        },
                        "subnetId": {
                          "Ref": "BasicVpcPublicSubnet1Subnet5FD9DDC2"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "BasicVpcPublicSubnet1RouteTable7B328207"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "BasicVpcIGW0CB62AA2"
                        }
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "vpcSetUp/Basic_Vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "192.168.4.0/22",
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "availabilityZone": "eu-central-1b",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PublicSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "BasicVpcPublicSubnet2RouteTableF66ABCD4"
                        },
                        "subnetId": {
                          "Ref": "BasicVpcPublicSubnet2SubnetF45B34F3"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "vpcSetUp/Basic_Vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "BasicVpcPublicSubnet2RouteTableF66ABCD4"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "BasicVpcIGW0CB62AA2"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "vpcSetUp/Basic_Vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "192.168.8.0/22",
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "availabilityZone": "eu-central-1a",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PrivateSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Isolated"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "BasicVpcPrivateSubnet1RouteTableDDD2C414"
                        },
                        "subnetId": {
                          "Ref": "BasicVpcPrivateSubnet1SubnetA17E648A"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "vpcSetUp/Basic_Vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "192.168.12.0/22",
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "availabilityZone": "eu-central-1b",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PrivateSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Isolated"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "BasicVpc30C9C2CB"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "vpcSetUp/Basic_Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "vpcSetUp/Basic_Vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "BasicVpcPrivateSubnet2RouteTable12844C56"
                        },
                        "subnetId": {
                          "Ref": "BasicVpcPrivateSubnet2Subnet8E02F4D9"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "vpcSetUp/Basic_Vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "vpcSetUp/Basic_Vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "vpcSetUp/Basic_Vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "BasicVpc30C9C2CB"
                    },
                    "internetGatewayId": {
                      "Ref": "BasicVpcIGW0CB62AA2"
                    }
                  }
                }
              }
            }
          },
          "Delete_Default_VPC": {
            "id": "Delete_Default_VPC",
            "path": "vpcSetUp/Delete_Default_VPC",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "vpcSetUp/Delete_Default_VPC/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "vpcSetUp/Delete_Default_VPC/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "vpcSetUp/Delete_Default_VPC/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "vpcSetUp/Delete_Default_VPC/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ec2:DeleteSecurityGroup",
                                    "ec2:DescribeSecurityGroups",
                                    "ec2:DescribeStaleSecurityGroups",
                                    "ec2:DescribeRouteTables",
                                    "ec2:DeleteRoute",
                                    "ec2:DeleteRouteTable",
                                    "ec2:DescribeNetworkAcls",
                                    "ec2:DeleteNetworkAcl",
                                    "ec2:DescribeSubnets",
                                    "ec2:DeleteSubnet",
                                    "ec2:DescribeNetworkInterfaces",
                                    "ec2:DetachNetworkInterface",
                                    "ec2:DescribeVpcAttribute",
                                    "ec2:DescribeVpcs",
                                    "ec2:DeleteVpc",
                                    "ec2:DescribeInternetGateways",
                                    "ec2:DetachInternetGateway",
                                    "ec2:DeleteInternetGateway",
                                    "ec2:DescribeRegions",
                                    "ec2:DescribeAccountAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteDefaultVPCServiceRoleDefaultPolicy1B67401D",
                            "roles": [
                              {
                                "Ref": "DeleteDefaultVPCServiceRole41812950"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "vpcSetUp/Delete_Default_VPC/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "vpcSetUp/Delete_Default_VPC/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "vpcSetUp/Delete_Default_VPC/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "vpcSetUp/Delete_Default_VPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68S3Bucket3F01804D"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68S3VersionKeyE1CCA944"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68S3VersionKeyE1CCA944"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "handler.DeleteDefaultVPC",
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteDefaultVPCServiceRole41812950",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.7",
                    "functionName": "Lambda_Daily_Delete_Default_VPC",
                    "memorySize": 128,
                    "timeout": 300
                  }
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "vpcSetUp/Delete_Default_VPC/LogRetention",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "vpcSetUp/Delete_Default_VPC/LogRetention/Provider"
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "vpcSetUp/Delete_Default_VPC/LogRetention/Resource"
                  }
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "vpcSetUp/Delete_Default_VPC/LogGroup"
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "vpcSetUp/Delete_Default_VPC/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "vpcSetUp/Delete_Default_VPC/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "DeleteDefaultVPCA1FCE209"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 1
                      }
                    }
                  }
                }
              },
              "AllowEventRulevpcSetUpScheduleVPCCheckLambdaEE40FF73": {
                "id": "AllowEventRulevpcSetUpScheduleVPCCheckLambdaEE40FF73",
                "path": "vpcSetUp/Delete_Default_VPC/AllowEventRulevpcSetUpScheduleVPCCheckLambdaEE40FF73",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "DeleteDefaultVPCA1FCE209",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "ScheduleVPCCheckLambdaFC6ABEDF",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "vpcSetUp/AssetParameters",
            "children": {
              "0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68": {
                "id": "0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68",
                "path": "vpcSetUp/AssetParameters/0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "vpcSetUp/AssetParameters/0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "vpcSetUp/AssetParameters/0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "vpcSetUp/AssetParameters/0d9e0aff1c669ff9e72194486e7299bb616310ce1d00c31f103603c7dd0ddd68/ArtifactHash"
                  }
                }
              },
              "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a": {
                "id": "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a",
                "path": "vpcSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "vpcSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "vpcSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "vpcSetUp/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/ArtifactHash"
                  }
                }
              }
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "vpcSetUp/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3Bucket4E933C7F"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs10.x"
                  }
                }
              }
            }
          },
          "Schedule_VPC_Check_Lambda": {
            "id": "Schedule_VPC_Check_Lambda",
            "path": "vpcSetUp/Schedule_VPC_Check_Lambda",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "vpcSetUp/Schedule_VPC_Check_Lambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "scheduleExpression": "cron(0 22 ? * * *)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "DeleteDefaultVPCA1FCE209",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}