Resources:
  PipeBucket0A689C15:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: 431892011317-pipe
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Bucket/Resource
  PipeBucketNotifications0B54F6A8:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: PipeBucket0A689C15
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            Filter:
              Key:
                FilterRules:
                  - Name: suffix
                    Value: .csv
                  - Name: prefix
                    Value: data
            LambdaFunctionArn:
              Fn::GetAtt:
                - PipeLambda247A18FB
                - Arn
    DependsOn:
      - PipeLambdaAllowBucketNotificationsFromlambdaPipelinePipeBucket3886726BC3E8C5ED
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Bucket/Notifications/Resource
  DLQLoadDataLambdaEFE21EE4:
    Type: AWS::SQS::Queue
    Metadata:
      aws:cdk:path: lambdaPipeline/DLQ_LoadData_Lambda/Resource
  PipeLambdaServiceRoleD98950EE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Lambda/ServiceRole/Resource
  PipeLambdaServiceRoleDefaultPolicyFC9EC737:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - DLQLoadDataLambdaEFE21EE4
                - Arn
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:Head*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipeBucket0A689C15
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipeBucket0A689C15
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - LoadDataTableFD0A0933
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: PipeLambdaServiceRoleDefaultPolicyFC9EC737
      Roles:
        - Ref: PipeLambdaServiceRoleD98950EE
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Lambda/ServiceRole/DefaultPolicy/Resource
  PipeLambda247A18FB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6fS3Bucket2C2C2E63
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6fS3VersionKey2DFED7A8
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6fS3VersionKey2DFED7A8
      Handler: loaddata.LoadData
      Role:
        Fn::GetAtt:
          - PipeLambdaServiceRoleD98950EE
          - Arn
      Runtime: python3.8
      DeadLetterConfig:
        TargetArn:
          Fn::GetAtt:
            - DLQLoadDataLambdaEFE21EE4
            - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: LoadDataTableFD0A0933
      FunctionName: Lambda_Put_Data_from_File_into_DynamoDB
      MemorySize: 128
      Timeout: 30
    DependsOn:
      - PipeLambdaServiceRoleDefaultPolicyFC9EC737
      - PipeLambdaServiceRoleD98950EE
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Lambda/Resource
      aws:asset:path: asset.880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6f
      aws:asset:property: Code
  PipeLambdaLogRetention3B76E0F6:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: PipeLambda247A18FB
      RetentionInDays: 5
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Lambda/LogRetention/Resource
  PipeLambdaEventInvokeConfig649FF8A5:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: PipeLambda247A18FB
      Qualifier: $LATEST
      MaximumRetryAttempts: 1
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Lambda/EventInvokeConfig/Resource
  PipeLambdaAllowBucketNotificationsFromlambdaPipelinePipeBucket3886726BC3E8C5ED:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PipeLambda247A18FB
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - PipeBucket0A689C15
          - Arn
    Metadata:
      aws:cdk:path: lambdaPipeline/Pipe_Lambda/AllowBucketNotificationsFromlambdaPipelinePipeBucket3886726B
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: lambdaPipeline/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: lambdaPipeline/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3Bucket4E933C7F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
      Runtime: nodejs10.x
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: lambdaPipeline/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: lambdaPipeline/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: lambdaPipeline/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: >-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require("https");
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require("url");
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse("FAILED", err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse("SUCCESS");
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // tslint:disable-next-line:max-line-length
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error messge as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || "See the details in CloudWatch Log Stream: " + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: "PUT",
                      headers: {
                          "content-type": "",
                          "content-length": responseBody.length
                      }
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on("error", (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs10.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: lambdaPipeline/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  LoadDataTableFD0A0933:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
        - AttributeName: name
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
        - AttributeName: name
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: LambdaPipeTable
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: lambdaPipeline/LoadData_Table/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.27.0,@aws-cdk/assets=1.27.0,@aws-cdk/aws-apigateway=1.27.0,@aws-cdk/aws-applicationautoscaling=1.27.0,@aws-cdk/aws-autoscaling=1.27.0,@aws-cdk/aws-autoscaling-common=1.27.0,@aws-cdk/aws-autoscaling-hooktargets=1.27.0,@aws-cdk/aws-certificatemanager=1.27.0,@aws-cdk/aws-cloudformation=1.27.0,@aws-cdk/aws-cloudfront=1.27.0,@aws-cdk/aws-cloudwatch=1.27.0,@aws-cdk/aws-dynamodb=1.27.0,@aws-cdk/aws-ec2=1.27.0,@aws-cdk/aws-ecr=1.27.0,@aws-cdk/aws-ecr-assets=1.27.0,@aws-cdk/aws-ecs=1.27.0,@aws-cdk/aws-elasticloadbalancing=1.27.0,@aws-cdk/aws-elasticloadbalancingv2=1.27.0,@aws-cdk/aws-events=1.27.0,@aws-cdk/aws-glue=1.27.0,@aws-cdk/aws-iam=1.27.0,@aws-cdk/aws-kms=1.27.0,@aws-cdk/aws-lambda=1.27.0,@aws-cdk/aws-logs=1.27.0,@aws-cdk/aws-route53=1.27.0,@aws-cdk/aws-route53-targets=1.27.0,@aws-cdk/aws-s3=1.27.0,@aws-cdk/aws-s3-assets=1.27.0,@aws-cdk/aws-s3-notifications=1.27.0,@aws-cdk/aws-sam=1.27.0,@aws-cdk/aws-secretsmanager=1.27.0,@aws-cdk/aws-servicediscovery=1.27.0,@aws-cdk/aws-sns=1.27.0,@aws-cdk/aws-sns-subscriptions=1.27.0,@aws-cdk/aws-sqs=1.27.0,@aws-cdk/aws-ssm=1.27.0,@aws-cdk/aws-stepfunctions=1.27.0,@aws-cdk/aws-stepfunctions-tasks=1.27.0,@aws-cdk/core=1.27.0,@aws-cdk/custom-resources=1.27.0,@aws-cdk/cx-api=1.27.0,@aws-cdk/region-info=1.27.0,jsii-runtime=Python/3.7.7
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6fS3Bucket2C2C2E63:
    Type: String
    Description: S3 bucket for asset "880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6f"
  AssetParameters880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6fS3VersionKey2DFED7A8:
    Type: String
    Description: S3 key for asset version "880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6f"
  AssetParameters880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6fArtifactHashF9784488:
    Type: String
    Description: Artifact hash for asset "880eab356bb9f767c8983784aae9354015752d2cae9be4f1eb200bdbbec53f6f"
  AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3Bucket4E933C7F:
    Type: String
    Description: S3 bucket for asset "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a"
  AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434:
    Type: String
    Description: S3 key for asset version "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a"
  AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aArtifactHash5A536F97:
    Type: String
    Description: Artifact hash for asset "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

